global proc
houdiniEngine_debugWindowMenuClick()
{
    hapiDebugWindow();
}

global proc
houdiniEngine_loadOTLMenuClick()
{
    string $filter = "Houdini Digital Assets (*.otl);;All Files (*.*)";
    string $results[] = `fileDialog2 -cap "Load Houdini Asset" -okc "Open" -fileFilter $filter -fm 1`;
    if (size($results) > 0)
	houdiniAsset -loadOTL $results[0];
}


global proc
houdiniEngine_syncAssetOutputMenuClick()
{
    string $currSels[] = `ls -sl`;
	if( size($currSels) < 1 )
	{
		error("Please select a houdiniAsset node to sync the output.");
	}
	string $currSel = $currSels[0];
	string $nodeTypeOfSel = `nodeType $currSel`;
	if( $nodeTypeOfSel == "houdiniAsset" )
	{
		string $children[] = `listRelatives -c -pa $currSel`;
		for( $ii = 0; $ii < size($children); $ii++ )
		{
			delete $children[$ii];
		}		
		houdiniAsset -sync $currSel;
	}
	else
	{
		error("Please select a houdiniAsset node to sync the output.");
	}
}

global proc
houdiniEngine_reloadAssetOutputMenuClick()
{
    string $currSels[] = `ls -sl`;
	if( size($currSels) < 1 )
	{
		error("Please select a houdiniAsset node to reload.");
	}
	string $currSel = $currSels[0];
	string $nodeTypeOfSel = `nodeType $currSel`;
	if( $nodeTypeOfSel == "houdiniAsset" )
	{
			
		houdiniAsset -reloadAsset $currSel;
		refreshEditorTemplates;
	}
	else
	{
		error("Please select a houdiniAsset node to reload.");
	}

}

global proc
houdiniEngineCreateUI()
{
    //cleanup UI
    houdiniEngineDeleteUI;

    global string $gMainWindow;
    setParent $gMainWindow;

    menu -label "Houdini Engine"
	-tearOff true
	houdiniEngineMenu;
	menuItem -label "Load Houdini Asset..."
	    -command "houdiniEngine_loadOTLMenuClick";
	menuItem -label "Sync Asset Output"
	    -command "houdiniEngine_syncAssetOutputMenuClick";
    menuItem -label "Reload Asset"
	    -command "houdiniEngine_reloadAssetOutputMenuClick";
	menuItem -label "HAPI Debug Window"
	    -command "houdiniEngine_debugWindowMenuClick";
}
