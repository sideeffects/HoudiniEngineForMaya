global proc
houdiniEngine_syncSelectedAsset()
{
    string $old_selection[] = `ls -selection -long`;

    string $assetNodes[] = houdiniEngine_getSelectedAssetNodes();
    if(size($assetNodes) < 1)
    {
        error("Please select at least one houdiniAsset node to sync.");
    }

    for($assetNode in $assetNodes)
    {
        houdiniEngine_syncAsset($assetNode);
    }

    catchQuiet(`select -replace $old_selection`);
}

proc
syncAsset(string $assetNode, int $syncAttributes, int $syncOutputs)
{
    string $cmd;
    // pre and post sync callbacks have been moved inside the houdiniAsset command
    $cmd += "houdiniAsset ";

    if($syncAttributes)
    {
        $cmd += "-syncAttributes ";
    }

    if($syncOutputs)
    {
        $cmd += "-syncOutputs ";
    }

    if(`getAttr ($assetNode + ".outputHiddenObjects")`)
    {
        $cmd += "-syncHidden ";
    }

    if(`getAttr ($assetNode + ".outputTemplatedGeometries")`)
    {
        $cmd += "-syncTemplatedGeos ";
    }

    $cmd += "-sync " + $assetNode;
    eval($cmd);
}

global proc
houdiniEngine_autoSyncAssetOutput(string $assetNode, int $autoSyncId)
{
    if($autoSyncId != `houdiniAsset -autoSyncId $assetNode`)
    {
        return;
    }

    houdiniEngine_syncAssetOutput($assetNode);
}

global proc
houdiniEngine_syncAssetOutput(string $assetNode)
{
    syncAsset($assetNode, 0, 1);
}
global proc
houdiniEngine_syncAssetAttributes(string $assetNode)
{
    syncAsset($assetNode, 1, 0);
}

global proc
houdiniEngine_syncAsset(string $assetNode)
{
    syncAsset($assetNode, 0, 0);
}

